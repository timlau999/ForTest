name: Full Stack Deployment with Docker

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_DEPLOY_PATH: /var/www/html/restaurant_b02

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Frontend - Install & Test
        working-directory: ./frontend
        run: |
          npm ci
          if grep -q '"test":' package.json; then
            npm test
          else
            echo "No frontend tests configured"
          fi

      - name: Backend - Install & Test
        working-directory: ./backend
        run: |
          npm ci
          if grep -q '"test":' package.json; then
            npm test
          else
            echo "No backend tests configured"
          fi

      - name: Admin - Install & Test
        working-directory: ./admin
        run: |
          npm ci
          if grep -q '"test":' package.json; then
            npm test
          else
            echo "No admin tests configured"
          fi

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Build Docker images
        run: |
          docker build -t backend ./backend
          docker build -t frontend ./frontend
          docker build -t admin ./admin

      - name: Deploy to AWS
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          port: ${{ secrets.AWS_PORT || 22 }}
          script: |
            echo "=== Starting Full-Stack Deployment ==="
            cd ${{ env.AWS_DEPLOY_PATH }}
            git reset --hard origin/main
            docker-compose -f ${{ env.AWS_DEPLOY_PATH }}/docker-compose.yml down
            docker-compose -f ${{ env.AWS_DEPLOY_PATH }}/docker-compose.yml up -d
            echo "=== Deployment Completed ==="
